#version 410 core

layout(triangles, equal_spacing, cw) in;

in vec3 tcPosition[];
in vec4 tcColor[];

out vec3 tePosition;
out vec4 teColor;

out vec3 tePatchDistance;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;



void main()
{

    teColor = tcColor[0];

    mat4 mvp = projection * view * model;

    vec3 p0 = gl_TessCoord.x * tcPosition[0];
    vec3 p1 = gl_TessCoord.y * tcPosition[1];
    vec3 p2 = gl_TessCoord.z * tcPosition[2];

    tePatchDistance = gl_TessCoord;
    tePosition = normalize(p0 + p1 + p2);
    gl_Position = mvp * vec4(tePosition, 1);


//gl_Position.xyzw = gl_in[0].gl_Position.xyzw * gl_TessCoord.x +
//                   gl_in[1].gl_Position.xyzw * gl_TessCoord.y +
//                   gl_in[2].gl_Position.xyzw * gl_TessCoord.z;
//

}
